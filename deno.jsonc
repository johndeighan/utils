{
	// --- Comments and trailing commas allowed!
	"tasks": {
		"cleanup": "
			   civet --inline-map -o .ts -c src/bin/cleanup.civet
			&& deno compile -A -o exe/cleanup.exe src/bin/cleanup.ts
			&& cp exe/cleanup.exe ../.deno/bin/cleanup.exe
			&& exe/cleanup
			",

		"compile:all": "
			   echo compile: datatypes.civet
			&& civet --inline-map -o .ts -c src/lib/datatypes.civet
			&& deno check src/lib/datatypes.ts

			&& echo compile: llutils.civet
			&& civet --inline-map -o .ts -c src/lib/llutils.civet
			&& deno check src/lib/llutils.ts

			&& echo compile: fs.civet
			&& civet --inline-map -o .ts -c src/lib/fs.civet
			&& deno check src/lib/fs.ts

			&& echo compile: logger.civet
			&& civet --inline-map -o .ts -c src/lib/logger.civet
			&& deno check src/lib/logger.ts

			&& echo compile: exec-utils.civet
			&& civet --inline-map -o .ts -c src/lib/exec-utils.civet
			&& deno check src/lib/exec-utils.ts

			&& echo compile: compile-config.civet
			&& civet --inline-map -o .ts -c src/lib/compile-config.civet
			&& deno check src/lib/compile-config.ts

			&& echo compile: utils.civet
			&& civet --inline-map -o .ts -c src/lib/utils.civet
			&& deno check src/lib/utils.ts

			&& echo compile: v8-stack.civet
			&& civet --inline-map -o .ts -c src/lib/v8-stack.civet
			&& deno check src/lib/v8-stack.ts

			&& echo compile: unit-test.civet
			&& civet --inline-map -o .ts -c src/lib/unit-test.civet
			&& deno check src/lib/unit-test.ts
			",

		"utest:all": "
			   civet --inline-map -o .ts -c test/datatypes.test.civet
			&& echo unit test: datatypes
			&& deno test -qA --reporter dot test/datatypes.test.ts

			&& civet --inline-map -o .ts -c test/llutils.test.civet
			&& echo unit test: llutils
			&& deno test -qA --reporter dot test/llutils.test.ts

			&& civet --inline-map -o .ts -c test/fs.test.civet
			&& echo unit test: fs
			&& deno test -qA --reporter dot test/fs.test.ts

			&& civet --inline-map -o .ts -c test/logger.test.civet
			&& echo unit test: logger
			&& deno test -qA --reporter dot test/logger.test.ts

			&& civet --inline-map -o .ts -c test/exec-utils.test.civet
			&& echo unit test: exec-utils
			&& deno test -qA --reporter dot test/exec-utils.test.ts

			&& civet --inline-map -o .ts -c test/compile-config.test.civet
			&& echo unit test: compile-config
			&& deno test -qA --reporter dot test/compile-config.test.ts

			&& civet --inline-map -o .ts -c test/utils.test.civet
			&& echo unit test: utils
			&& deno test -qA --reporter dot test/utils.test.ts

			&& civet --inline-map -o .ts -c test/v8-stack.test.civet
			&& civet --inline-map -o .ts -c test/v8-stack/v8-module.civet
			&& echo unit test: v8-stack
			&& deno test -qA --reporter dot test/v8-stack.test.ts
			",

		"docs:all": "
			deno doc --html --name=@jdeighan/utils src/lib/datatypes.ts src/lib/llutils.ts src/lib/fs.ts src/lib/logger.ts src/lib/utils.ts src/lib/v8-stack.ts src/lib/unit-test.ts
			",

		"build:compiler": "
			   civet --inline-map -o .ts -c src/bin/compile.civet
			&& deno check src/bin/compile.ts
			&& deno compile -A -o exe/compile.exe src/bin/compile.ts
			&& cp exe/compile.exe ../.deno/bin/compile.exe
			",

		"build:runtemp": "
			   civet --inline-map -o .ts -c src/bin/runtemp.civet
			&& deno check src/bin/runtemp.ts
			&& deno compile -A -o exe/runtemp.exe src/bin/runtemp.ts
			&& cp exe/runtemp.exe ../.deno/bin/runtemp.exe
			",

		"build:utest": "
			   civet --inline-map -o .ts -c src/bin/utest.civet
			&& deno check src/bin/utest.ts
			&& deno compile -A -o exe/utest.exe src/bin/utest.ts
			&& cp exe/utest.exe ../.deno/bin/utest.exe
			",

		"bootstrap":      "
			   clear
			&& deno task cleanup
			&& deno task compile:all
			&& deno task utest:all
			&& deno task docs:all
			&& deno task build:compiler
			&& deno task build:runtemp
			&& deno task build:utest
			&& echo SUCCESS
			",

		"temp": "
			   clear
			&& civet --inline-map -o .ts -c test/temp.civet
			&& deno check test/temp.ts
			&& deno run -A test/temp.ts
			",

		"debug": "
			   clear
			&& civet --inline-map -o .ts -c test/temp.civet
			&& deno check test/temp.ts
			&& deno run -A --inspect-brk test/temp.ts
			",
		},

	"imports": {
		"@std/assert": "jsr:@std/assert@^1.0.10",
		"@std/async": "jsr:@std/async@^1.0.9",
		"@std/async/debounce": "jsr:@std/async@1.0.9/debounce",
		"@std/cli": "jsr:@std/cli@^1.0.9",
		"@std/fmt": "jsr:@std/fmt@^1.0.5",
		"@std/fmt/printf": "jsr:@std/fmt@^1.0.5/printf",
		"@std/fs": "jsr:@std/fs@^1.0.6",
		"@std/fs/expand-glob": "jsr:@std/fs@^1.0.6/expand-glob",
		"@std/log": "jsr:@std/log@^0.224.14",
		"@std/path": "jsr:@std/path@^1.0.8",
		"@std/streams": "jsr:@std/streams@^1.0.8",

		"fs": "node:fs",
		"path": "node:path",
		"url": "node:url",
		"stream/web": "node:stream/web",

		"glob": "npm:glob@^11.0.0",
		"@danielx/civet": "npm:@danielx/civet@^0.9.6",

		"@jdeighan/utils/datatypes": "./src/lib/datatypes.ts",
		"@jdeighan/utils/llutils": "./src/lib/llutils.ts",
		"@jdeighan/utils/fs": "./src/lib/fs.ts",
		"@jdeighan/utils/logger": "./src/lib/logger.ts",
		"@jdeighan/utils": "./src/lib/utils.ts",
		"@jdeighan/utils/v8-stack": "./src/lib/v8-stack.ts",
		"@jdeighan/utils/unit-test": "./src/lib/unit-test.ts",
		},
	}
