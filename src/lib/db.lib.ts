"use strict";
// db.lib.civet

import {Database} from "jsr:@db/sqlite"
import {undef, defined, isString} from 'datatypes'

// ---------------------------------------------------------------------------
//      A project's standard database is named proj.db
//      It's placed at the root of the project
// ---------------------------------------------------------------------------

export const projdb = new Database('./proj.db')

projdb.exec(`create table if not exists KeyValueStore (
	key text primary key,
	value text not null
	)`)

// ---------------------------------------------------------------------------

export const setKV = (
		key: string,
		value: unknown
		): void => {

	projdb.exec(`insert or replace into KeyValueStore
(key, value)
values(?,?)`, [key, JSON.stringify(value)])
	return
}

// ---------------------------------------------------------------------------

export const getKV = (key: string): unknown => {

	using stmt = projdb.prepare(`select value
from KeyValueStore
where key = ?`)

	const lRow = stmt.value<[string]>(key)
	return defined(lRow) ? JSON.parse(lRow[0]) : undef
}

// ---------------------------------------------------------------------------

export const delKV = (key: string): void => {

	projdb.exec(`delete from KeyValueStore
where key = ?`, [key])
	return
}


//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXFVzZXJzXFxqb2huZFxcdXRpbHNcXHNyY1xcbGliXFxkYi5saWIuY2l2ZXQudHN4Iiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGpvaG5kXFx1dGlsc1xcc3JjXFxsaWJcXGRiLmxpYi5jaXZldCJdLCJtYXBwaW5ncyI6IjtBQUFBLGVBQWM7QUFDZCxBQUFBO0FBQ0EsQUFBQSxNQUFNLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCO0FBQ3ZDLEFBQUEsQUFBQSxNQUFNLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVztBQUNsRCxBQUFBO0FBQ0EsQUFBQSw4RUFBNkU7QUFDN0UsQUFBQSxzREFBcUQ7QUFDckQsQUFBQSw4Q0FBNkM7QUFDN0MsQUFBQSw4RUFBNkU7QUFDN0UsQUFBQTtBQUNBLEFBQUEsQUFBQSxNQUFNLENBQU8sTUFBTixNQUFNLENBQUMsQ0FBRSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDO0FBQzFDLEFBQUE7QUFDQSxBQUFBLEFBQUEsTUFBTSxDQUFDLElBQUksQ0FBQSxBQUFDLENBQUc7QUFDZjtBQUNBO0FBQ0EsRUFFQyxDQUFHLENBQUE7QUFDSixBQUFBO0FBQ0EsQUFBQSw4RUFBNkU7QUFDN0UsQUFBQTtBQUNBLEFBQUEsQUFBQSxNQUFNLENBQU0sTUFBTCxLQUFLLENBQUMsQ0FBRSxDQUFDLENBQUM7QUFDakIsQUFBQSxFQUFFLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQztBQUNkLEFBQUEsRUFBRSxLQUFLLENBQUMsQ0FBQyxPQUFPO0FBQ2hCLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQSxDQUFBO0FBQ1osQUFBQTtBQUNBLEFBQUEsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFBLEFBQUMsQ0FBRztBQUNoQjtBQUNBLFdBRUUsQ0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUE7QUFDbkMsQUFBQSxDQUFDLE07QUFBTSxDQUFBO0FBQ1AsQUFBQTtBQUNBLEFBQUEsOEVBQTZFO0FBQzdFLEFBQUE7QUFDQSxBQUFBLEFBQUEsTUFBTSxDQUFNLE1BQUwsS0FBSyxDQUFDLENBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQSxDQUFBO0FBQ3pDLEFBQUE7QUFDQSxBQUFBLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQSxBQUFDLENBQUc7QUFDaEM7QUFDQSxhQUVFLENBQUcsQ0FBQTtBQUNMLEFBQUE7QUFDQSxBQUFBLENBQUssTUFBSixJQUFJLENBQUMsQ0FBRSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQztBQUNsQyxBQUFBLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsSztBQUFLLENBQUE7QUFDbkQsQUFBQTtBQUNBLEFBQUEsOEVBQTZFO0FBQzdFLEFBQUE7QUFDQSxBQUFBLEFBQUEsTUFBTSxDQUFNLE1BQUwsS0FBSyxDQUFDLENBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQSxDQUFBO0FBQ3RDLEFBQUE7QUFDQSxBQUFBLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQSxBQUFDLENBQUc7QUFDaEIsYUFFRSxDQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFBO0FBQ1osQUFBQSxDQUFDLE07QUFBTSxDQUFBO0FBQ1A7QUFDQSIsIm5hbWVzIjpbXSwic291cmNlc0NvbnRlbnQiOlsiIyBkYi5saWIuY2l2ZXRcblxuaW1wb3J0IHtEYXRhYmFzZX0gZnJvbSBcImpzcjpAZGIvc3FsaXRlXCJcbmltcG9ydCB7dW5kZWYsIGRlZmluZWQsIGlzU3RyaW5nfSBmcm9tICdkYXRhdHlwZXMnXG5cbiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4jICAgICAgQSBwcm9qZWN0J3Mgc3RhbmRhcmQgZGF0YWJhc2UgaXMgbmFtZWQgcHJvai5kYlxuIyAgICAgIEl0J3MgcGxhY2VkIGF0IHRoZSByb290IG9mIHRoZSBwcm9qZWN0XG4jIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5leHBvcnQgcHJvamRiIDo9IG5ldyBEYXRhYmFzZSgnLi9wcm9qLmRiJylcblxucHJvamRiLmV4ZWMgXCJcIlwiXG5cdGNyZWF0ZSB0YWJsZSBpZiBub3QgZXhpc3RzIEtleVZhbHVlU3RvcmUgKFxuXHRcdGtleSB0ZXh0IHByaW1hcnkga2V5LFxuXHRcdHZhbHVlIHRleHQgbm90IG51bGxcblx0XHQpXG5cdFwiXCJcIlxuXG4jIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5leHBvcnQgc2V0S1YgOj0gKFxuXHRcdGtleTogc3RyaW5nLFxuXHRcdHZhbHVlOiB1bmtub3duXG5cdFx0KTogdm9pZCA9PlxuXG5cdHByb2pkYi5leGVjIFwiXCJcIlxuXHRcdGluc2VydCBvciByZXBsYWNlIGludG8gS2V5VmFsdWVTdG9yZVxuXHRcdChrZXksIHZhbHVlKVxuXHRcdHZhbHVlcyg/LD8pXG5cdFx0XCJcIlwiLCBba2V5LCBKU09OLnN0cmluZ2lmeSh2YWx1ZSldXG5cdHJldHVyblxuXG4jIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5leHBvcnQgZ2V0S1YgOj0gKGtleTogc3RyaW5nKTogdW5rbm93biA9PlxuXG5cdHVzaW5nIHN0bXQgPSBwcm9qZGIucHJlcGFyZSBcIlwiXCJcblx0XHRzZWxlY3QgdmFsdWVcblx0XHRmcm9tIEtleVZhbHVlU3RvcmVcblx0XHR3aGVyZSBrZXkgPSA/XG5cdFx0XCJcIlwiXG5cblx0bFJvdyA6PSBzdG10LnZhbHVlPFtzdHJpbmddPihrZXkpXG5cdHJldHVybiBkZWZpbmVkKGxSb3cpID8gSlNPTi5wYXJzZShsUm93WzBdKSA6IHVuZGVmXG5cbiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmV4cG9ydCBkZWxLViA6PSAoa2V5OiBzdHJpbmcpOiB2b2lkID0+XG5cblx0cHJvamRiLmV4ZWMgXCJcIlwiXG5cdFx0ZGVsZXRlIGZyb20gS2V5VmFsdWVTdG9yZVxuXHRcdHdoZXJlIGtleSA9ID9cblx0XHRcIlwiXCIsIFtrZXldXG5cdHJldHVyblxuXG4iXX0=