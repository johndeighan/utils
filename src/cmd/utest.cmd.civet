# utest.civet

import {undef, notdefined, assert} from 'datatypes'
import {OL} from 'llutils'
import {getCmdArgs} from 'utils'
import {relpath} from 'fsys'
import {DBG, LOG, WARN, ERR} from 'logger'
import {
	runUnitTestsFor, runAllUnitTests,
	} from 'compile'

{_, w: watch} := getCmdArgs {
	w: {type: 'boolean'}
	}

# ---------------------------------------------------------------------------

if (_.length == 0)
	DBG "Running all unit tests"
	for {stub, success, msg, code} of runAllUnitTests()
		if not success
			if (msg == undef)
				ERR "UNIT TEST FAILED: #{stub}"
			else
				ERR "UNIT TEST FAILED: #{stub} - #{msg}"
else
	DBG "Running #{_.length} unit tests"
	for stub of _
		# --- NOTE: runUnitTestsFor() ensures that lib/cmd file
		#           and unit test files are compiled
		for {success} of runUnitTestsFor stub
			if not success
				ERR "FAILED: Unit test #{stub}"
