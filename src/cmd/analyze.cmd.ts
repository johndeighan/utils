"use strict";
// analyze.cmd.civet

import {
	undef, defined, notdefined, slurp, stdChecks,
	LOG, DBG, DIR, flag, nonOption, assert, croak, findFile, fileExt,
	} from 'base-utils'
import {assertIsDefined} from 'datatypes'
import {getCmdArgs} from 'cmd-args'
import {DUMP} from 'to-nice'
import {ts2ast, astAsString, analyze} from 'typescript'
import {civet2ast, civet2ts} from 'civet'

stdChecks()
getCmdArgs()

// ---------------------------------------------------------------------------

const fileName = nonOption(0) || 'ast.civet'
const path = findFile(fileName) || croak(`No such file: ${fileName}`)
assertIsDefined(path)

LOG(`-----  ANALYZE ${path}  -----`)

let ref;switch(fileExt(path)) {
	case '.ts': {
		ref = analyze(slurp(path));break;
	}
	case '.civet': {
		ref = analyze(civet2ts(slurp(path)));break;
	}
	default: {
		ref = croak(`Bad path: ${path}`)
	}
};const analysis =ref

DIR(analysis)

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXFVzZXJzXFxqb2huZFxcdXRpbHNcXHNyY1xcY21kXFxhbmFseXplLmNtZC5jaXZldC50c3giLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcam9obmRcXHV0aWxzXFxzcmNcXGNtZFxcYW5hbHl6ZS5jbWQuY2l2ZXQiXSwibWFwcGluZ3MiOiI7QUFBQSxvQkFBbUI7QUFDbkIsQUFBQTtBQUNBLEFBQUEsTUFBTSxDQUFDLENBQUM7QUFDUixDQUFDLEtBQUssQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLFNBQVMsQ0FBQztBQUM5QyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLE9BQU8sQ0FBQztBQUNsRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsWUFBWTtBQUNwQixBQUFBLEFBQUEsTUFBTSxDQUFDLENBQUMsZUFBZSxDQUFDLENBQUMsSUFBSSxDQUFDLFdBQVc7QUFDekMsQUFBQSxBQUFBLE1BQU0sQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFVO0FBQ25DLEFBQUEsQUFBQSxNQUFNLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUztBQUM1QixBQUFBLEFBQUEsTUFBTSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLFlBQVk7QUFDdkQsQUFBQSxBQUFBLE1BQU0sQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPO0FBQ3pDLEFBQUE7QUFDQSxBQUFBLEFBQUEsU0FBUyxDQUFDLENBQUM7QUFDWCxBQUFBLEFBQUEsVUFBVSxDQUFDLENBQUM7QUFDWixBQUFBO0FBQ0EsQUFBQSw4RUFBNkU7QUFDN0UsQUFBQTtBQUNBLEFBQUEsQUFBUSxNQUFSLFFBQVEsQ0FBQyxDQUFFLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxXQUFXO0FBQ3ZDLEFBQUEsQUFBSSxNQUFKLElBQUksQ0FBQyxDQUFFLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxjQUFjLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQztBQUNoRSxBQUFBLEFBQUEsZUFBZSxDQUFBLEFBQUMsSUFBSSxDQUFBO0FBQ3BCLEFBQUE7QUFDQSxBQUFBLEFBQUEsR0FBRyxDQUFBLEFBQUMsQ0FBQyxlQUFlLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFBO0FBQ25DLEFBQUE7QUFDQSxBQUFBLEksRyxDQUFZLE1BQU0sQ0FBQSxBQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQSxDQUFBLENBQUE7QUFDaEMsQUFBQSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUEsQ0FBQSxDQUFBO0FBQ1gsQUFBQSxFLEcsR0FBRSxPQUFPLENBQUEsQUFBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUEsTztDQUFBLENBQUE7QUFDckIsQUFBQSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUEsQ0FBQSxDQUFBO0FBQ2QsQUFBQSxFLEcsR0FBRSxPQUFPLENBQUEsQUFBQyxRQUFRLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUEsTztDQUFBLENBQUE7QUFDL0IsQUFBQSxDQUFDLE9BQUksQ0FBQSxDQUFBLENBQUE7QUFDTCxBQUFBLEUsRyxHQUFFLEtBQUssQ0FBQSxBQUFDLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxDQUFDLEM7Q0FBQSxDO0FBQUEsQyxDQU5uQixNQUFSLFFBQVEsQ0FBQyxDLEdBTWtCO0FBQzNCLEFBQUE7QUFDQSxBQUFBLEFBQUEsR0FBRyxDQUFBLEFBQUMsUUFBUSxDQUFBO0FBQ1oiLCJuYW1lcyI6W10sInNvdXJjZXNDb250ZW50IjpbIiMgYW5hbHl6ZS5jbWQuY2l2ZXRcclxuXHJcbmltcG9ydCB7XHJcblx0dW5kZWYsIGRlZmluZWQsIG5vdGRlZmluZWQsIHNsdXJwLCBzdGRDaGVja3MsXHJcblx0TE9HLCBEQkcsIERJUiwgZmxhZywgbm9uT3B0aW9uLCBhc3NlcnQsIGNyb2FrLCBmaW5kRmlsZSwgZmlsZUV4dCxcclxuXHR9IGZyb20gJ2Jhc2UtdXRpbHMnXHJcbmltcG9ydCB7YXNzZXJ0SXNEZWZpbmVkfSBmcm9tICdkYXRhdHlwZXMnXHJcbmltcG9ydCB7Z2V0Q21kQXJnc30gZnJvbSAnY21kLWFyZ3MnXHJcbmltcG9ydCB7RFVNUH0gZnJvbSAndG8tbmljZSdcclxuaW1wb3J0IHt0czJhc3QsIGFzdEFzU3RyaW5nLCBhbmFseXplfSBmcm9tICd0eXBlc2NyaXB0J1xyXG5pbXBvcnQge2NpdmV0MmFzdCwgY2l2ZXQydHN9IGZyb20gJ2NpdmV0J1xyXG5cclxuc3RkQ2hlY2tzKClcclxuZ2V0Q21kQXJncygpXHJcblxyXG4jIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuZmlsZU5hbWUgOj0gbm9uT3B0aW9uKDApIHx8ICdhc3QuY2l2ZXQnXHJcbnBhdGggOj0gZmluZEZpbGUoZmlsZU5hbWUpIHx8IGNyb2FrKFwiTm8gc3VjaCBmaWxlOiAje2ZpbGVOYW1lfVwiKVxyXG5hc3NlcnRJc0RlZmluZWQgcGF0aFxyXG5cclxuTE9HIFwiLS0tLS0gIEFOQUxZWkUgI3twYXRofSAgLS0tLS1cIlxyXG5cclxuYW5hbHlzaXMgOj0gc3dpdGNoIGZpbGVFeHQocGF0aClcclxuXHR3aGVuICcudHMnXHJcblx0XHRhbmFseXplIHNsdXJwKHBhdGgpXHJcblx0d2hlbiAnLmNpdmV0J1xyXG5cdFx0YW5hbHl6ZSBjaXZldDJ0cyhzbHVycChwYXRoKSlcclxuXHRlbHNlXHJcblx0XHRjcm9hayBcIkJhZCBwYXRoOiAje3BhdGh9XCJcclxuXHJcbkRJUiBhbmFseXNpc1xyXG4iXX0=