# dumpast.cmd.civet

import {
	undef, defined, notdefined, slurp, stdChecks,
	LOG, DBG, flag, nonOption, assert, croak, findFile, fileExt,
	} from 'base-utils'
import {assertIsDefined, isString} from 'datatypes'
import {hasKey} from 'llutils'
import {getCmdArgs} from 'cmd-args'
import {DUMP} from 'to-nice'
import {ts2ast, astAsString} from 'typescript'
import {civet2ast} from 'civet'

stdChecks()
[hArgs, lNonOptions] := getCmdArgs()

# ---------------------------------------------------------------------------

fileName := nonOption(0) || 'ast.civet'
path := findFile(fileName) || croak("No such file: #{fileName}")
assertIsDefined path

LOG "-----  AST for #{path}  -----"

hAst := switch fileExt(path)
	when '.ts'
		ts2ast slurp(path)
	when '.civet'
		civet2ast slurp(path)
	else
		croak "Bad path: #{path}"

lInclude := (
	if hasKey(hArgs, 'lInclude')
		isString(hArgs.lInclude) ? hArgs.lInclude.split(',') : undef
	else
		undef
	)

if flag('g')
	console.dir hAst, {depth: null}
else if flag('f')
	DUMP hAst, 'hAst'
else
	console.log astAsString(hAst, {lInclude})

