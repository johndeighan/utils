"use strict";
// runtemp.cmd.civet

import {
	undef, defined, exit, flag, findFile, tryCmd, LOG,
	doCompile, doUnitTest, doRun,
	} from 'base-utils'

if (flag('h')) {
	exit("USAGE: runtemp [-d] { <stub> }")
}

// ---------------------------------------------------------------------------

const lFlags: string[] = []
for (const stub of Deno.args) {
	if (stub.startsWith('-')) {
		lFlags.push(stub)
	}
	else {
		await tryCmd(doCompile, stub, 'lib')
		await tryCmd(doUnitTest, stub, 'lib')
	}
}

await tryCmd(doCompile, 'temp', undef)
await tryCmd(doRun, 'temp', undef, lFlags, {debug: flag('D')})

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXFVzZXJzXFxqb2huZFxcdXRpbHNcXHNyY1xcY21kXFxydW50ZW1wLmNtZC5jaXZldC50c3giLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcam9obmRcXHV0aWxzXFxzcmNcXGNtZFxccnVudGVtcC5jbWQuY2l2ZXQiXSwibWFwcGluZ3MiOiI7QUFBQSxvQkFBbUI7QUFDbkIsQUFBQTtBQUNBLEFBQUEsTUFBTSxDQUFDLENBQUM7QUFDUixDQUFDLEtBQUssQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQztBQUNuRCxDQUFDLFNBQVMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLEtBQUssQ0FBQztBQUM5QixDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsWUFBWTtBQUNwQixBQUFBO0FBQ0EsQUFBQSxBQUFBLEdBQUcsQ0FBQSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUEsQ0FBQSxDQUFBO0FBQ1osQUFBQSxDQUFDLElBQUksQ0FBQSxBQUFDLGdDQUFnQyxDO0FBQUEsQ0FBQTtBQUN0QyxBQUFBO0FBQ0EsQUFBQSw4RUFBNkU7QUFDN0UsQUFBQTtBQUNBLEFBQUEsQUFBZ0IsTUFBaEIsTUFBTSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFFLENBQUMsQ0FBQyxDQUFDO0FBQ3RCLEFBQUEsQUFBQSxHQUFHLENBQUMsQ0FBQSxNQUFBLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQSxDQUFBLENBQUE7QUFDckIsQUFBQSxDQUFDLEdBQUcsQ0FBQSxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFBLENBQUEsQ0FBQTtBQUN4QixBQUFBLEVBQUUsTUFBTSxDQUFDLElBQUksQ0FBQSxBQUFDLElBQUksQztDQUFBLENBQUE7QUFDbEIsQUFBQSxDQUFDLElBQUksQ0FBQSxDQUFBO0FBQ0wsQUFBQSxFQUFFLEtBQUssQ0FBQyxNQUFNLENBQUEsQUFBQyxTQUFTLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxLQUFLLENBQUE7QUFDckMsQUFBQSxFQUFFLEtBQUssQ0FBQyxNQUFNLENBQUEsQUFBQyxVQUFVLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxLQUFLLEM7Q0FBQSxDO0FBQUEsQ0FBQTtBQUN0QyxBQUFBO0FBQ0EsQUFBQSxBQUFBLEtBQUssQ0FBQyxNQUFNLENBQUEsQUFBQyxTQUFTLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxLQUFLLENBQUE7QUFDckMsQUFBQSxBQUFBLEtBQUssQ0FBQyxNQUFNLENBQUEsQUFBQyxLQUFLLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFBO0FBQzdEIiwibmFtZXMiOltdLCJzb3VyY2VzQ29udGVudCI6WyIjIHJ1bnRlbXAuY21kLmNpdmV0XHJcblxyXG5pbXBvcnQge1xyXG5cdHVuZGVmLCBkZWZpbmVkLCBleGl0LCBmbGFnLCBmaW5kRmlsZSwgdHJ5Q21kLCBMT0csXHJcblx0ZG9Db21waWxlLCBkb1VuaXRUZXN0LCBkb1J1bixcclxuXHR9IGZyb20gJ2Jhc2UtdXRpbHMnXHJcblxyXG5pZiBmbGFnKCdoJylcclxuXHRleGl0IFwiVVNBR0U6IHJ1bnRlbXAgWy1kXSB7IDxzdHViPiB9XCJcclxuXHJcbiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG5sRmxhZ3M6IHN0cmluZ1tdIDo9IFtdXHJcbmZvciBzdHViIG9mIERlbm8uYXJnc1xyXG5cdGlmIHN0dWIuc3RhcnRzV2l0aCgnLScpXHJcblx0XHRsRmxhZ3MucHVzaCBzdHViXHJcblx0ZWxzZVxyXG5cdFx0YXdhaXQgdHJ5Q21kIGRvQ29tcGlsZSwgc3R1YiwgJ2xpYidcclxuXHRcdGF3YWl0IHRyeUNtZCBkb1VuaXRUZXN0LCBzdHViLCAnbGliJ1xyXG5cclxuYXdhaXQgdHJ5Q21kIGRvQ29tcGlsZSwgJ3RlbXAnLCB1bmRlZlxyXG5hd2FpdCB0cnlDbWQgZG9SdW4sICd0ZW1wJywgdW5kZWYsIGxGbGFncywge2RlYnVnOiBmbGFnKCdEJyl9XHJcbiJdfQ==