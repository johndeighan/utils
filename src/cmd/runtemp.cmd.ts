"use strict";
// runtemp.cmd.civet

import {
	undef, defined, SUCCEED, FAIL, flag, LOG,
	findFile, tryCmd, civet2tsFile, doUnitTest, doRun,
	} from 'base-utils'

if (flag('h')) {
	// ---  -d invoked Chrome debugger
	//      -D causes debugging output
	SUCCEED("USAGE: runtemp [-d] [-D] { <stub> }")
}

// ---------------------------------------------------------------------------

let stub = 'temp'
const lFlags: string[] = []
for (const arg of Deno.args) {
	if (arg.startsWith('-')) {
		lFlags.push(arg)
	}
	else if (arg.match(/^\d+$/)) {
		stub = `temp${arg}`
	}
	else {
		await tryCmd(civet2tsFile, arg, 'lib')
		await tryCmd(doUnitTest, arg, 'lib')
	}
}

await tryCmd(civet2tsFile, stub, undef)
LOG('-'.repeat(40))
await tryCmd(doRun, stub, undef, lFlags, {debug: flag('d')})
LOG('-'.repeat(40))

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXFVzZXJzXFxqb2huZFxcdXRpbHNcXHNyY1xcY21kXFxydW50ZW1wLmNtZC5jaXZldC50c3giLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcam9obmRcXHV0aWxzXFxzcmNcXGNtZFxccnVudGVtcC5jbWQuY2l2ZXQiXSwibWFwcGluZ3MiOiI7QUFBQSxvQkFBbUI7QUFDbkIsQUFBQTtBQUNBLEFBQUEsTUFBTSxDQUFDLENBQUM7QUFDUixDQUFDLEtBQUssQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQztBQUMxQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLEtBQUssQ0FBQztBQUNuRCxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsWUFBWTtBQUNwQixBQUFBO0FBQ0EsQUFBQSxBQUFBLEdBQUcsQ0FBQSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUEsQ0FBQSxDQUFBO0FBQ1osQUFBQSxDQUFDLGtDQUFpQztBQUNsQyxBQUFBLENBQUMsa0NBQWlDO0FBQ2xDLEFBQUEsQ0FBQyxPQUFPLENBQUEsQUFBQyxxQ0FBcUMsQztBQUFBLENBQUE7QUFDOUMsQUFBQTtBQUNBLEFBQUEsOEVBQTZFO0FBQzdFLEFBQUE7QUFDQSxBQUFBLEFBQUEsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsTUFBTTtBQUNqQixBQUFBLEFBQWdCLE1BQWhCLE1BQU0sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBRSxDQUFDLENBQUMsQ0FBQztBQUN0QixBQUFBLEFBQUEsR0FBRyxDQUFDLENBQUEsTUFBQSxHQUFHLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUEsQ0FBQSxDQUFBO0FBQ3BCLEFBQUEsQ0FBQyxHQUFHLENBQUEsR0FBRyxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQSxDQUFBLENBQUE7QUFDdkIsQUFBQSxFQUFFLE1BQU0sQ0FBQyxJQUFJLENBQUEsQUFBQyxHQUFHLEM7Q0FBQSxDQUFBO0FBQ2pCLEFBQUEsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFBLEdBQUcsQ0FBQyxLQUFLLENBQUEsQUFBQyxPQUFPLENBQUEsQ0FBQSxDQUFBLENBQUE7QUFDMUIsQUFBQSxFQUFFLElBQUksQyxDQUFFLENBQUMsQ0FBQyxJQUFJLEVBQUUsR0FBRyxDQUFDLEM7Q0FBQyxDQUFBO0FBQ3JCLEFBQUEsQ0FBQyxJQUFJLENBQUEsQ0FBQTtBQUNMLEFBQUEsRUFBRSxLQUFLLENBQUMsTUFBTSxDQUFBLEFBQUMsWUFBWSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsS0FBSyxDQUFBO0FBQ3ZDLEFBQUEsRUFBRSxLQUFLLENBQUMsTUFBTSxDQUFBLEFBQUMsVUFBVSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsS0FBSyxDO0NBQUEsQztBQUFBLENBQUE7QUFDckMsQUFBQTtBQUNBLEFBQUEsQUFBQSxLQUFLLENBQUMsTUFBTSxDQUFBLEFBQUMsWUFBWSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsS0FBSyxDQUFBO0FBQ3RDLEFBQUEsQUFBQSxHQUFHLENBQUEsQUFBQyxHQUFHLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFBO0FBQ2xCLEFBQUEsQUFBQSxLQUFLLENBQUMsTUFBTSxDQUFBLEFBQUMsS0FBSyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQTtBQUMzRCxBQUFBLEFBQUEsR0FBRyxDQUFBLEFBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQTtBQUNsQiIsIm5hbWVzIjpbXSwic291cmNlc0NvbnRlbnQiOlsiIyBydW50ZW1wLmNtZC5jaXZldFxyXG5cclxuaW1wb3J0IHtcclxuXHR1bmRlZiwgZGVmaW5lZCwgU1VDQ0VFRCwgRkFJTCwgZmxhZywgTE9HLFxyXG5cdGZpbmRGaWxlLCB0cnlDbWQsIGNpdmV0MnRzRmlsZSwgZG9Vbml0VGVzdCwgZG9SdW4sXHJcblx0fSBmcm9tICdiYXNlLXV0aWxzJ1xyXG5cclxuaWYgZmxhZygnaCcpXHJcblx0IyAtLS0gIC1kIGludm9rZWQgQ2hyb21lIGRlYnVnZ2VyXHJcblx0IyAgICAgIC1EIGNhdXNlcyBkZWJ1Z2dpbmcgb3V0cHV0XHJcblx0U1VDQ0VFRCBcIlVTQUdFOiBydW50ZW1wIFstZF0gWy1EXSB7IDxzdHViPiB9XCJcclxuXHJcbiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG5sZXQgc3R1YiA9ICd0ZW1wJ1xyXG5sRmxhZ3M6IHN0cmluZ1tdIDo9IFtdXHJcbmZvciBhcmcgb2YgRGVuby5hcmdzXHJcblx0aWYgYXJnLnN0YXJ0c1dpdGgoJy0nKVxyXG5cdFx0bEZsYWdzLnB1c2ggYXJnXHJcblx0ZWxzZSBpZiBhcmcubWF0Y2ggL15cXGQrJC9cclxuXHRcdHN0dWIgPSBcInRlbXAje2FyZ31cIlxyXG5cdGVsc2VcclxuXHRcdGF3YWl0IHRyeUNtZCBjaXZldDJ0c0ZpbGUsIGFyZywgJ2xpYidcclxuXHRcdGF3YWl0IHRyeUNtZCBkb1VuaXRUZXN0LCBhcmcsICdsaWInXHJcblxyXG5hd2FpdCB0cnlDbWQgY2l2ZXQydHNGaWxlLCBzdHViLCB1bmRlZlxyXG5MT0cgJy0nLnJlcGVhdCg0MClcclxuYXdhaXQgdHJ5Q21kIGRvUnVuLCBzdHViLCB1bmRlZiwgbEZsYWdzLCB7ZGVidWc6IGZsYWcoJ2QnKX1cclxuTE9HICctJy5yZXBlYXQoNDApXHJcbiJdfQ==