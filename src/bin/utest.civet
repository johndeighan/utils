# run-unit-test.civet

import {
	undef, assert, getCmdArgs, OL, relpath,
	compileAllFiles, runUnitTest, runAllUnitTests,
	DBG, LOG, WARN, ERR,
	} from '../lib/utils.ts'

{_, w: watch, c: compile} := getCmdArgs {
	w: {type: 'boolean'}
	c: {type: 'boolean'}
	}

# ---------------------------------------------------------------------------

if compile
	for {path, status, outPath} of compileAllFiles()
		if (status == 'nofile')
			WARN "compileAllFiles() returned non-file"
		else if (status != 'compiled') && (path != undef)
			LOG "#{relpath(path)} status = #{status}"

if (_.length == 0)
	DBG "Running all unit tests"
	for {stub, success, msg, code} of runAllUnitTests()
		if not success
			if (msg == undef)
				ERR "UNIT TEST FAILED: #{stub}"
			else
				ERR "UNIT TEST FAILED: #{stub} - #{msg}"
else
	DBG "Running #{_.length} unit tests"
	for stub of _
		# --- NOTE: runUnitTest() ensures that lib/bin file
		#           and unit test files are compiled
		{code} := runUnitTest stub
		if (code != 0)
			ERR "FAILED: Unit test #{stub}"
