# run-unit-test.civet

import {
	DBG, LOG, WARN, ERR,
	} from '@jdeighan/utils/logger.js'
import {
	assert, execCmd, getCmdArgs, OL, relpath,
	compileAllFiles, runUnitTest, runAllUnitTests,
	} from '@jdeighan/utils/llutils.js'

{_, watch, compile} := getCmdArgs Deno.args, {
	hArgs: {
		w: {alias: 'watch'}
		c: {alias: 'compile'}
		}
	doSetLogger: true
	}

# ---------------------------------------------------------------------------

if compile
	for {path, status, outPath} of compileAllFiles()
		if (status != 'compiled')
			LOG "#{relpath(path)} status = #{status}"

if (_.length == 0)
	DBG "Running all unit tests"
	for {code, cmdLine} of runAllUnitTests()
		if (code != 0)
			ERR "FAILED: #{cmdLine}"
else
	DBG "Running #{_.length} unit tests"
	for stub of _
		# --- NOTE: runUnitTest() ensures that lib/bin file
		#           and unit test files are compiled
		{code} := runUnitTest stub
		if (code != 0)
			ERR "FAILED: Unit test #{stub}"
