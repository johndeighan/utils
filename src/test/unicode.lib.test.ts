"use strict";
// unicode.lib.test.civet

import {DBG} from 'logger'
import {getCmdArgs} from 'utils'
import {
	getPrefix,
	} from 'unicode'
import {
	equal, like, succeeds, fails, truthy, falsy,
	} from 'unit-test'

getCmdArgs()

// ---------------------------------------------------------------------------

DBG("getPrefix(level, option)")

equal(getPrefix(2, 'plain'),      '│   │   ')
equal(getPrefix(2, 'withArrow'),  '│   └─> ')
equal(getPrefix(2, 'withResume'), '│   ├─> ')
equal(getPrefix(2, 'withFlat'),   '│   ├── ')
equal(getPrefix(2, 'withYield'),  '│   ├<─ ')
equal(getPrefix(2, 'noLastVbar'), '│       ')
equal(getPrefix(2, 'none'),       '        ')

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3JjL3Rlc3QvdW5pY29kZS5saWIudGVzdC5jaXZldC50c3giLCJzb3VyY2VzIjpbInNyYy90ZXN0L3VuaWNvZGUubGliLnRlc3QuY2l2ZXQiXSwibWFwcGluZ3MiOiI7QUFBQSx5QkFBd0I7QUFDeEIsQUFBQTtBQUNBLEFBQUEsTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVE7QUFDMUIsQUFBQSxBQUFBLE1BQU0sQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPO0FBQ2hDLEFBQUEsQUFBQSxNQUFNLENBQUMsQ0FBQztBQUNSLENBQUMsU0FBUyxDQUFDO0FBQ1gsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVM7QUFDakIsQUFBQSxBQUFBLE1BQU0sQ0FBQyxDQUFDO0FBQ1IsQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxLQUFLLENBQUM7QUFDN0MsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFdBQVc7QUFDbkIsQUFBQTtBQUNBLEFBQUEsQUFBQSxVQUFVLENBQUMsQ0FBQztBQUNaLEFBQUE7QUFDQSxBQUFBLDhFQUE2RTtBQUM3RSxBQUFBO0FBQ0EsQUFBQSxBQUFBLEdBQUcsQ0FBQSxBQUFDLDBCQUEwQixDQUFBO0FBQzlCLEFBQUE7QUFDQSxBQUFBLEFBQUEsS0FBSyxDQUFBLEFBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLE1BQU0sVUFBVSxDQUFBO0FBQzVDLEFBQUEsQUFBQSxLQUFLLENBQUEsQUFBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUMsRUFBRSxVQUFVLENBQUE7QUFDNUMsQUFBQSxBQUFBLEtBQUssQ0FBQSxBQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQTtBQUM1QyxBQUFBLEFBQUEsS0FBSyxDQUFBLEFBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLEdBQUcsVUFBVSxDQUFBO0FBQzVDLEFBQUEsQUFBQSxLQUFLLENBQUEsQUFBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUMsRUFBRSxVQUFVLENBQUE7QUFDNUMsQUFBQSxBQUFBLEtBQUssQ0FBQSxBQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQTtBQUM1QyxBQUFBLEFBQUEsS0FBSyxDQUFBLEFBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLE9BQU8sVUFBVSxDQUFBO0FBQzVDIiwibmFtZXMiOltdLCJzb3VyY2VzQ29udGVudCI6WyIjIHVuaWNvZGUubGliLnRlc3QuY2l2ZXRcclxuXHJcbmltcG9ydCB7REJHfSBmcm9tICdsb2dnZXInXHJcbmltcG9ydCB7Z2V0Q21kQXJnc30gZnJvbSAndXRpbHMnXHJcbmltcG9ydCB7XHJcblx0Z2V0UHJlZml4LFxyXG5cdH0gZnJvbSAndW5pY29kZSdcclxuaW1wb3J0IHtcclxuXHRlcXVhbCwgbGlrZSwgc3VjY2VlZHMsIGZhaWxzLCB0cnV0aHksIGZhbHN5LFxyXG5cdH0gZnJvbSAndW5pdC10ZXN0J1xyXG5cclxuZ2V0Q21kQXJncygpXHJcblxyXG4jIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuREJHIFwiZ2V0UHJlZml4KGxldmVsLCBvcHRpb24pXCJcclxuXHJcbmVxdWFsIGdldFByZWZpeCgyLCAncGxhaW4nKSwgICAgICAn4pSCICAg4pSCICAgJ1xyXG5lcXVhbCBnZXRQcmVmaXgoMiwgJ3dpdGhBcnJvdycpLCAgJ+KUgiAgIOKUlOKUgD4gJ1xyXG5lcXVhbCBnZXRQcmVmaXgoMiwgJ3dpdGhSZXN1bWUnKSwgJ+KUgiAgIOKUnOKUgD4gJ1xyXG5lcXVhbCBnZXRQcmVmaXgoMiwgJ3dpdGhGbGF0JyksICAgJ+KUgiAgIOKUnOKUgOKUgCAnXHJcbmVxdWFsIGdldFByZWZpeCgyLCAnd2l0aFlpZWxkJyksICAn4pSCICAg4pScPOKUgCAnXHJcbmVxdWFsIGdldFByZWZpeCgyLCAnbm9MYXN0VmJhcicpLCAn4pSCICAgICAgICdcclxuZXF1YWwgZ2V0UHJlZml4KDIsICdub25lJyksICAgICAgICcgICAgICAgICdcclxuIl19