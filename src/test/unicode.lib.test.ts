"use strict";
// unicode.lib.test.civet

import {getPrefix} from 'unicode'
import {DBG} from 'logger'
import {getCmdArgs} from 'cmd-args'
import {
	equal, like, succeeds, fails, truthy, falsy,
	} from 'unit-test'

getCmdArgs()

// ---------------------------------------------------------------------------

DBG("getPrefix(level, option)")

equal(getPrefix(2, 'plain'),      '│   │   ')
equal(getPrefix(2, 'withArrow'),  '│   └─> ')
equal(getPrefix(2, 'withResume'), '│   ├─> ')
equal(getPrefix(2, 'withFlat'),   '│   ├── ')
equal(getPrefix(2, 'withYield'),  '│   ├<─ ')
equal(getPrefix(2, 'noLastVbar'), '│       ')
equal(getPrefix(2, 'none'),       '        ')

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXFVzZXJzXFxqb2huZFxcdXRpbHNcXHNyY1xcdGVzdFxcdW5pY29kZS5saWIudGVzdC5jaXZldC50c3giLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcam9obmRcXHV0aWxzXFxzcmNcXHRlc3RcXHVuaWNvZGUubGliLnRlc3QuY2l2ZXQiXSwibWFwcGluZ3MiOiI7QUFBQSx5QkFBd0I7QUFDeEIsQUFBQTtBQUNBLEFBQUEsTUFBTSxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVM7QUFDakMsQUFBQSxBQUFBLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRO0FBQzFCLEFBQUEsQUFBQSxNQUFNLENBQUMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVTtBQUNuQyxBQUFBLEFBQUEsTUFBTSxDQUFDLENBQUM7QUFDUixDQUFDLEtBQUssQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEtBQUssQ0FBQztBQUM3QyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVztBQUNuQixBQUFBO0FBQ0EsQUFBQSxBQUFBLFVBQVUsQ0FBQyxDQUFDO0FBQ1osQUFBQTtBQUNBLEFBQUEsOEVBQTZFO0FBQzdFLEFBQUE7QUFDQSxBQUFBLEFBQUEsR0FBRyxDQUFBLEFBQUMsMEJBQTBCLENBQUE7QUFDOUIsQUFBQTtBQUNBLEFBQUEsQUFBQSxLQUFLLENBQUEsQUFBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsTUFBTSxVQUFVLENBQUE7QUFDNUMsQUFBQSxBQUFBLEtBQUssQ0FBQSxBQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxFQUFFLFVBQVUsQ0FBQTtBQUM1QyxBQUFBLEFBQUEsS0FBSyxDQUFBLEFBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFBO0FBQzVDLEFBQUEsQUFBQSxLQUFLLENBQUEsQUFBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLENBQUMsR0FBRyxVQUFVLENBQUE7QUFDNUMsQUFBQSxBQUFBLEtBQUssQ0FBQSxBQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxFQUFFLFVBQVUsQ0FBQTtBQUM1QyxBQUFBLEFBQUEsS0FBSyxDQUFBLEFBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFBO0FBQzVDLEFBQUEsQUFBQSxLQUFLLENBQUEsQUFBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsT0FBTyxVQUFVLENBQUE7QUFDNUMiLCJuYW1lcyI6W10sInNvdXJjZXNDb250ZW50IjpbIiMgdW5pY29kZS5saWIudGVzdC5jaXZldFxyXG5cclxuaW1wb3J0IHtnZXRQcmVmaXh9IGZyb20gJ3VuaWNvZGUnXHJcbmltcG9ydCB7REJHfSBmcm9tICdsb2dnZXInXHJcbmltcG9ydCB7Z2V0Q21kQXJnc30gZnJvbSAnY21kLWFyZ3MnXHJcbmltcG9ydCB7XHJcblx0ZXF1YWwsIGxpa2UsIHN1Y2NlZWRzLCBmYWlscywgdHJ1dGh5LCBmYWxzeSxcclxuXHR9IGZyb20gJ3VuaXQtdGVzdCdcclxuXHJcbmdldENtZEFyZ3MoKVxyXG5cclxuIyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbkRCRyBcImdldFByZWZpeChsZXZlbCwgb3B0aW9uKVwiXHJcblxyXG5lcXVhbCBnZXRQcmVmaXgoMiwgJ3BsYWluJyksICAgICAgJ+KUgiAgIOKUgiAgICdcclxuZXF1YWwgZ2V0UHJlZml4KDIsICd3aXRoQXJyb3cnKSwgICfilIIgICDilJTilIA+ICdcclxuZXF1YWwgZ2V0UHJlZml4KDIsICd3aXRoUmVzdW1lJyksICfilIIgICDilJzilIA+ICdcclxuZXF1YWwgZ2V0UHJlZml4KDIsICd3aXRoRmxhdCcpLCAgICfilIIgICDilJzilIDilIAgJ1xyXG5lcXVhbCBnZXRQcmVmaXgoMiwgJ3dpdGhZaWVsZCcpLCAgJ+KUgiAgIOKUnDzilIAgJ1xyXG5lcXVhbCBnZXRQcmVmaXgoMiwgJ25vTGFzdFZiYXInKSwgJ+KUgiAgICAgICAnXHJcbmVxdWFsIGdldFByZWZpeCgyLCAnbm9uZScpLCAgICAgICAnICAgICAgICAnXHJcbiJdfQ==