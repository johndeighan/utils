"use strict";
// cielo.lib.test.civet

import {defined, isFunction} from 'datatypes'
import {DBG} from 'logger'
import {getCmdArgs} from 'cmd-args'
import {
	cielo2civet, cielo2civetFile, configFromFile,
	} from 'cielo'
import {
	equal, like, succeeds, fails, truthy, falsy, setDirTree,
	} from 'unit-test'

getCmdArgs()

// ---------------------------------------------------------------------------

const setup = (): void => {

	DBG("setDirTree()")

	setDirTree('src/test/cielo', `file.config.ts
	export default new Object({
		a: 1,
		b: 'abc',
		f: () => 'hello'
		})`)
}

setup()

// ---------------------------------------------------------------------------

DBG("cielo2civet(code)", "cielo2civetFile()")

equal(cielo2civet('abc'), 'abc')

DBG("configFromFile(path)");

(() => {
	const hConfig = configFromFile('src/test/cielo/file.config.ts')
	truthy(defined(hConfig))
	truthy(defined(hConfig.a))
	falsy( defined(hConfig.x))
	if (isFunction(hConfig.f)) {
		equal(hConfig.f(), 'hello')
	}
}
	)

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXFVzZXJzXFxqb2huZFxcdXRpbHNcXHNyY1xcdGVzdFxcY2llbG8ubGliLnRlc3QuY2l2ZXQudHN4Iiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGpvaG5kXFx1dGlsc1xcc3JjXFx0ZXN0XFxjaWVsby5saWIudGVzdC5jaXZldCJdLCJtYXBwaW5ncyI6IjtBQUFBLHVCQUFzQjtBQUN0QixBQUFBO0FBQ0EsQUFBQSxNQUFNLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVztBQUM3QyxBQUFBLEFBQUEsTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVE7QUFDMUIsQUFBQSxBQUFBLE1BQU0sQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFVO0FBQ25DLEFBQUEsQUFBQSxNQUFNLENBQUMsQ0FBQztBQUNSLENBQUMsV0FBVyxDQUFDLENBQUMsZUFBZSxDQUFDLENBQUMsY0FBYyxDQUFDO0FBQzlDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPO0FBQ2YsQUFBQSxBQUFBLE1BQU0sQ0FBQyxDQUFDO0FBQ1IsQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxVQUFVLENBQUM7QUFDekQsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFdBQVc7QUFDbkIsQUFBQTtBQUNBLEFBQUEsQUFBQSxVQUFVLENBQUMsQ0FBQztBQUNaLEFBQUE7QUFDQSxBQUFBLDhFQUE2RTtBQUM3RSxBQUFBO0FBQ0EsQUFBQSxBQUFLLE1BQUwsS0FBSyxDQUFDLENBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUEsQ0FBQTtBQUNwQixBQUFBO0FBQ0EsQUFBQSxDQUFDLEdBQUcsQ0FBQSxBQUFDLGNBQWMsQ0FBQTtBQUNuQixBQUFBO0FBQ0EsQUFBQSxDQUFDLFVBQVUsQ0FBQSxBQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBRztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBLElBRUUsQ0FBRyxDO0FBQUEsQ0FBQTtBQUNMLEFBQUE7QUFDQSxBQUFBLEFBQUEsS0FBSyxDQUFDLENBQUM7QUFDUCxBQUFBO0FBQ0EsQUFBQSw4RUFBNkU7QUFDN0UsQUFBQTtBQUNBLEFBQUEsQUFBQSxHQUFHLENBQUEsQUFBQyxtQkFBbUIsQ0FBQyxDQUFDLG1CQUFtQixDQUFBO0FBQzVDLEFBQUE7QUFDQSxBQUFBLEFBQUEsS0FBSyxDQUFBLEFBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFBO0FBQy9CLEFBQUE7QUFDQSxBQUFBLEFBQUEsR0FBRyxDQUFBLEFBQUMsc0JBQXNCLEMsQ0FBQTtBQUMxQixBQUFBO0FBQ0EsQUFBQSxBQUFBLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFBLENBQUE7QUFDTixBQUFBLENBQVEsTUFBUCxPQUFPLENBQUMsQ0FBRSxDQUFDLGNBQWMsQ0FBQSxBQUFDLCtCQUErQixDQUFBO0FBQzFELEFBQUEsQ0FBQyxNQUFNLENBQUEsQUFBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUE7QUFDeEIsQUFBQSxDQUFDLE1BQU0sQ0FBQSxBQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUE7QUFDMUIsQUFBQSxDQUFDLEtBQUssQ0FBQSxDQUFFLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUE7QUFDMUIsQUFBQSxDQUFDLEdBQUcsQ0FBQSxVQUFVLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFBLENBQUEsQ0FBQTtBQUN6QixBQUFBLEVBQUUsS0FBSyxDQUFBLEFBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLEM7Q0FBQSxDO0FBQUEsQ0FBQTtBQUM1QixDQUFDLENBQUM7QUFDRiIsIm5hbWVzIjpbXSwic291cmNlc0NvbnRlbnQiOlsiIyBjaWVsby5saWIudGVzdC5jaXZldFxyXG5cclxuaW1wb3J0IHtkZWZpbmVkLCBpc0Z1bmN0aW9ufSBmcm9tICdkYXRhdHlwZXMnXHJcbmltcG9ydCB7REJHfSBmcm9tICdsb2dnZXInXHJcbmltcG9ydCB7Z2V0Q21kQXJnc30gZnJvbSAnY21kLWFyZ3MnXHJcbmltcG9ydCB7XHJcblx0Y2llbG8yY2l2ZXQsIGNpZWxvMmNpdmV0RmlsZSwgY29uZmlnRnJvbUZpbGUsXHJcblx0fSBmcm9tICdjaWVsbydcclxuaW1wb3J0IHtcclxuXHRlcXVhbCwgbGlrZSwgc3VjY2VlZHMsIGZhaWxzLCB0cnV0aHksIGZhbHN5LCBzZXREaXJUcmVlLFxyXG5cdH0gZnJvbSAndW5pdC10ZXN0J1xyXG5cclxuZ2V0Q21kQXJncygpXHJcblxyXG4jIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuc2V0dXAgOj0gKCk6IHZvaWQgPT5cclxuXHJcblx0REJHIFwic2V0RGlyVHJlZSgpXCJcclxuXHJcblx0c2V0RGlyVHJlZSAnc3JjL3Rlc3QvY2llbG8nLCBcIlwiXCJcclxuXHRcdGZpbGUuY29uZmlnLnRzXHJcblx0XHRcdGV4cG9ydCBkZWZhdWx0IG5ldyBPYmplY3Qoe1xyXG5cdFx0XHRcdGE6IDEsXHJcblx0XHRcdFx0YjogJ2FiYycsXHJcblx0XHRcdFx0ZjogKCkgPT4gJ2hlbGxvJ1xyXG5cdFx0XHRcdH0pXHJcblx0XHRcIlwiXCJcclxuXHJcbnNldHVwKClcclxuXHJcbiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG5EQkcgXCJjaWVsbzJjaXZldChjb2RlKVwiLCBcImNpZWxvMmNpdmV0RmlsZSgpXCJcclxuXHJcbmVxdWFsIGNpZWxvMmNpdmV0KCdhYmMnKSwgJ2FiYydcclxuXHJcbkRCRyBcImNvbmZpZ0Zyb21GaWxlKHBhdGgpXCJcclxuXHJcbigoKSA9PlxyXG5cdGhDb25maWcgOj0gY29uZmlnRnJvbUZpbGUgJ3NyYy90ZXN0L2NpZWxvL2ZpbGUuY29uZmlnLnRzJ1xyXG5cdHRydXRoeSBkZWZpbmVkKGhDb25maWcpXHJcblx0dHJ1dGh5IGRlZmluZWQoaENvbmZpZy5hKVxyXG5cdGZhbHN5ICBkZWZpbmVkKGhDb25maWcueClcclxuXHRpZiBpc0Z1bmN0aW9uKGhDb25maWcuZilcclxuXHRcdGVxdWFsIGhDb25maWcuZigpLCAnaGVsbG8nXHJcblx0KVxyXG4iXX0=