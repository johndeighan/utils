export type {symbolDesc}
export {parseExportLine, allExportsIn}
x := 23
export type symbolDesc = 'abc' | 'def'
export isSymbolDesc := (x: any): x is symbolDesc =>
export parseExportLine := (line: string): symbolDesc? =>
export getExportsIn := (path: string): symbolDesc[] =>
export hExt1 := {'.txt': 3, '.ext': 5}
export let hExt2 := {'.txt': 3, '.ext': 5}
export var hExt3 := {'.txt': 3, '.ext': 5}
export function indented(
export interface hashof<T> {
export enum LogCmd {
export class FileEventHandler
export assert: TAssertFunc := (
export isArrayOfStrings := (x: any): x is string[] =>
export getV8Stack = (): stackFrame[] =>