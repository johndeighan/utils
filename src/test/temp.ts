"use strict";
export type TDefined = {}
export const defined = (x: unknown): x is TDefined => {
	return (x !== undefined) && (x !== null)
}

export interface hash {
	[key: string | symbol]: any
}

// ---------------------------------------------------------------------------

export const getOptions = <T extends hash,>(
		hOptions: hash={},
		hDefaults: T
		): T => {

	return {...hDefaults, ...hOptions}
}

// ---------------------------------------------------------------------------

const hOptions = {
	anything: 42
	}

// --- in my function that uses getOptions() ---

type opt = {
	oneLine: boolean
	compress: boolean
	trunc: number
	lExcept: string[]
	}
const h = getOptions<opt>(hOptions, {
	oneLine: true,
	compress: true,
	trunc: 0,
	lExcept: ['dont']
	})

console.dir(h)

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3JjL3Rlc3QvdGVtcC5jaXZldC50c3giLCJzb3VyY2VzIjpbInNyYy90ZXN0L3RlbXAuY2l2ZXQiXSwibWFwcGluZ3MiOiI7QUFBQSxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3pCLEFBQUEsQUFBQSxNQUFNLENBQVEsTUFBUCxPQUFPLENBQUMsQ0FBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUEsQ0FBQTtBQUNoRCxBQUFBLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUUsQ0FBQyxTQUFTLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRSxDQUFDLElBQUksQztBQUFDLENBQUE7QUFDdkMsQUFBQTtBQUNBLEFBQUEsQUFBQSxNQUFNLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQSxDQUFBO0FBQ3JCLEFBQUEsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxHO0FBQUcsQ0FBQTtBQUM1QixBQUFBO0FBQ0EsQUFBQSw4RUFBNkU7QUFDN0UsQUFBQTtBQUNBLEFBQUEsQUFBQSxNQUFNLENBQVcsTUFBVixVQUFVLENBQUMsQ0FBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxJLENBQUksQ0FBQyxDQUFDO0FBQ3RDLEFBQUEsRUFBRSxRQUFRLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDcEIsQUFBQSxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUM7QUFDZCxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUEsQ0FBQTtBQUNULEFBQUE7QUFDQSxBQUFBLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxTQUFTLENBQUMsQ0FBQyxHQUFHLFFBQVEsQztBQUFDLENBQUE7QUFDbkMsQUFBQTtBQUNBLEFBQUEsOEVBQTZFO0FBQzdFLEFBQUE7QUFDQSxBQUFBLEFBQVEsTUFBUixRQUFRLENBQUMsQ0FBRSxDQUFDLENBQUM7QUFDYixBQUFBLENBQUMsUUFBUSxDQUFDLENBQUMsRUFBRTtBQUNiLENBQUMsQ0FBQztBQUNGLEFBQUE7QUFDQSxBQUFBLGdEQUErQztBQUMvQyxBQUFBO0FBQ0EsQUFBQSxBQUFBLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDWixBQUFBLENBQUMsT0FBTyxDQUFDLENBQUMsT0FBTztBQUNqQixBQUFBLENBQUMsUUFBUSxDQUFDLENBQUMsT0FBTztBQUNsQixBQUFBLENBQUMsS0FBSyxDQUFDLENBQUMsTUFBTTtBQUNkLEFBQUEsQ0FBQyxPQUFPLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUNsQixDQUFDLENBQUM7QUFDRixBQUFBLEFBQUMsTUFBRCxDQUFDLENBQUMsQ0FBRSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQSxBQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7QUFDaEMsQUFBQSxDQUFDLE9BQU8sQ0FBQyxDQUFDLElBQUksQ0FBQTtBQUNkLEFBQUEsQ0FBQyxRQUFRLENBQUMsQ0FBQyxJQUFJLENBQUE7QUFDZixBQUFBLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFBO0FBQ1QsQUFBQSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDO0FBQ2xCLENBQUMsQ0FBQyxDQUFBO0FBQ0YsQUFBQTtBQUNBLEFBQUEsQUFBQSxPQUFPLENBQUMsR0FBRyxDQUFBLEFBQUMsQ0FBQyxDQUFBO0FBQ2IiLCJuYW1lcyI6W10sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB0eXBlIFREZWZpbmVkID0ge31cbmV4cG9ydCBkZWZpbmVkIDo9ICh4OiB1bmtub3duKTogeCBpcyBURGVmaW5lZCA9PlxuXHRyZXR1cm4gKHggIT0gdW5kZWZpbmVkKSAmJiAoeCAhPSBudWxsKVxuXG5leHBvcnQgaW50ZXJmYWNlIGhhc2hcblx0W2tleTogc3RyaW5nIHwgc3ltYm9sXTogYW55XG5cbiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmV4cG9ydCBnZXRPcHRpb25zIDo9IDxUIGV4dGVuZHMgaGFzaD4oXG5cdFx0aE9wdGlvbnM6IGhhc2g9e30sXG5cdFx0aERlZmF1bHRzOiBUXG5cdFx0KTogVCA9PlxuXG5cdHJldHVybiB7Li4uaERlZmF1bHRzLCAuLi5oT3B0aW9uc31cblxuIyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuaE9wdGlvbnMgOj0ge1xuXHRhbnl0aGluZzogNDJcblx0fVxuXG4jIC0tLSBpbiBteSBmdW5jdGlvbiB0aGF0IHVzZXMgZ2V0T3B0aW9ucygpIC0tLVxuXG50eXBlIG9wdCA9IHtcblx0b25lTGluZTogYm9vbGVhblxuXHRjb21wcmVzczogYm9vbGVhblxuXHR0cnVuYzogbnVtYmVyXG5cdGxFeGNlcHQ6IHN0cmluZ1tdXG5cdH1cbmggOj0gZ2V0T3B0aW9uczxvcHQ+IGhPcHRpb25zLCB7XG5cdG9uZUxpbmU6IHRydWVcblx0Y29tcHJlc3M6IHRydWVcblx0dHJ1bmM6IDBcblx0bEV4Y2VwdDogWydkb250J11cblx0fVxuXG5jb25zb2xlLmRpciBoXG4iXX0=