"use strict";
// logger.test.civet

import {
	DBG, LOG, WARN, ERR, getLog, setLogLevel, clearLog,
	INDENT, UNDENT,
	} from '@jdeighan/utils'
import {
	equal, truthy, falsy, succeeds, fails, matches,
	} from '@jdeighan/utils/unit-test'

// ---------------------------------------------------------------------------

const logAll = () => {
	clearLog()
	DBG("debug")
	LOG("info")
	WARN("warning")
	ERR("error")
	return getLog()
};

// ---------------------------------------------------------------------------

(() => {
	const curLog = logAll()
	equal(curLog, `I info
W warning
ERROR: error`)
}
	)();

(() => {
	setLogLevel('debug')
	const curLog = logAll()
	truthy(curLog.startsWith(`D debug
I info
W warning
ERROR: error`))
}
	)();

(() => {
	setLogLevel('error')
	const curLog = logAll()
	truthy(curLog.startsWith(`ERROR: error`))
}
	)();

(() => {
	clearLog()
	setLogLevel('info')
	LOG("info", INDENT, "stuff", UNDENT)
	LOG("done")
	const curLog = getLog()
	equal(curLog, `I info
I    stuff
I done`)
}
	)();

(() => {
	clearLog()
	setLogLevel('info')
	LOG("info", INDENT, "stuff", UNDENT)
	LOG("finished")
	const curLog = getLog()
	equal(curLog, `I info
I    stuff
I finished`)
}
	)();

(() => {
	clearLog()
	setLogLevel('profile')
	LOG("info", INDENT, "stuff", UNDENT)
	LOG("done")

	const curLog = getLog()
	matches(curLog, /^ms\n-{5}\n\s*\d+\sI\sinfo\n\s*\d+\sI\s{4}stuff\s*\d+\sI\sdone$/)
}
	) // ()

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVzdC9sb2dnZXIudGVzdC5jaXZldC50c3giLCJzb3VyY2VzIjpbInRlc3QvbG9nZ2VyLnRlc3QuY2l2ZXQiXSwibWFwcGluZ3MiOiI7QUFBQSxvQkFBbUI7QUFDbkIsQUFBQTtBQUNBLEFBQUEsTUFBTSxDQUFDLENBQUM7QUFDUixDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDLFFBQVEsQ0FBQztBQUNwRCxDQUFDLE1BQU0sQ0FBQyxDQUFDLE1BQU0sQ0FBQztBQUNoQixDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsaUJBQWlCO0FBQ3pCLEFBQUEsQUFBQSxNQUFNLENBQUMsQ0FBQztBQUNSLENBQUMsS0FBSyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsT0FBTyxDQUFDO0FBQ2hELENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQywyQkFBMkI7QUFDbkMsQUFBQTtBQUNBLEFBQUEsOEVBQTZFO0FBQzdFLEFBQUE7QUFDQSxBQUFBLEFBQU0sTUFBTixNQUFNLENBQUMsQ0FBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQSxDQUFBO0FBQ2YsQUFBQSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQ1gsQUFBQSxDQUFDLEdBQUcsQ0FBQSxBQUFDLE9BQU8sQ0FBQTtBQUNaLEFBQUEsQ0FBQyxHQUFHLENBQUEsQUFBQyxNQUFNLENBQUE7QUFDWCxBQUFBLENBQUMsSUFBSSxDQUFBLEFBQUMsU0FBUyxDQUFBO0FBQ2YsQUFBQSxDQUFDLEdBQUcsQ0FBQSxBQUFDLE9BQU8sQ0FBQTtBQUNaLEFBQUEsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEM7QUFBQyxDLENBQUE7QUFDaEIsQUFBQTtBQUNBLEFBQUEsOEVBQTZFO0FBQzdFLEFBQUE7QUFDQSxBQUFBLEFBQUEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUEsQ0FBQTtBQUNOLEFBQUEsQ0FBTyxNQUFOLE1BQU0sQ0FBQyxDQUFFLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDbkIsQUFBQSxDQUFDLEtBQUssQ0FBQSxBQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUc7QUFDbEI7QUFDQSxZQUVFLENBQUcsQztBQUFBLENBQUE7QUFDTCxDQUFDLENBQUMsQ0FBQyxDLENBQUM7QUFDSixBQUFBO0FBQ0EsQUFBQSxBQUFBLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFBLENBQUE7QUFDTixBQUFBLENBQUMsV0FBVyxDQUFBLEFBQUMsT0FBTyxDQUFBO0FBQ3BCLEFBQUEsQ0FBTyxNQUFOLE1BQU0sQ0FBQyxDQUFFLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDbkIsQUFBQSxDQUFDLE1BQU0sQ0FBQSxBQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBRztBQUM3QjtBQUNBO0FBQ0EsWUFFRSxDQUFHLENBQUMsQztBQUFBLENBQUE7QUFDTixDQUFDLENBQUMsQ0FBQyxDLENBQUM7QUFDSixBQUFBO0FBQ0EsQUFBQSxBQUFBLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFBLENBQUE7QUFDTixBQUFBLENBQUMsV0FBVyxDQUFBLEFBQUMsT0FBTyxDQUFBO0FBQ3BCLEFBQUEsQ0FBTyxNQUFOLE1BQU0sQ0FBQyxDQUFFLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDbkIsQUFBQSxDQUFDLE1BQU0sQ0FBQSxBQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBRyxZQUUzQixDQUFHLENBQUMsQztBQUFBLENBQUE7QUFDTixDQUFDLENBQUMsQ0FBQyxDLENBQUM7QUFDSixBQUFBO0FBQ0EsQUFBQSxBQUFBLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFBLENBQUE7QUFDTixBQUFBLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDWCxBQUFBLENBQUMsV0FBVyxDQUFBLEFBQUMsTUFBTSxDQUFBO0FBQ25CLEFBQUEsQ0FBQyxHQUFHLENBQUEsQUFBQyxNQUFNLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxNQUFNLENBQUE7QUFDcEMsQUFBQSxDQUFDLEdBQUcsQ0FBQSxBQUFDLE1BQU0sQ0FBQTtBQUNYLEFBQUEsQ0FBTyxNQUFOLE1BQU0sQ0FBQyxDQUFFLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDbkIsQUFBQSxDQUFDLEtBQUssQ0FBQSxBQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUc7QUFDbEI7QUFDQSxNQUVFLENBQUcsQztBQUFBLENBQUE7QUFDTCxDQUFDLENBQUMsQ0FBQyxDLENBQUM7QUFDSixBQUFBO0FBQ0EsQUFBQSxBQUFBLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFBLENBQUE7QUFDTixBQUFBLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDWCxBQUFBLENBQUMsV0FBVyxDQUFBLEFBQUMsTUFBTSxDQUFBO0FBQ25CLEFBQUEsQ0FBQyxHQUFHLENBQUEsQUFBQyxNQUFNLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxNQUFNLENBQUE7QUFDcEMsQUFBQSxDQUFDLEdBQUcsQ0FBQSxBQUFDLFVBQVUsQ0FBQTtBQUNmLEFBQUEsQ0FBTyxNQUFOLE1BQU0sQ0FBQyxDQUFFLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDbkIsQUFBQSxDQUFDLEtBQUssQ0FBQSxBQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUc7QUFDbEI7QUFDQSxVQUVFLENBQUcsQztBQUFBLENBQUE7QUFDTCxDQUFDLENBQUMsQ0FBQyxDLENBQUM7QUFDSixBQUFBO0FBQ0EsQUFBQSxBQUFBLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFBLENBQUE7QUFDTixBQUFBLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDWCxBQUFBLENBQUMsV0FBVyxDQUFBLEFBQUMsU0FBUyxDQUFBO0FBQ3RCLEFBQUEsQ0FBQyxHQUFHLENBQUEsQUFBQyxNQUFNLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxNQUFNLENBQUE7QUFDcEMsQUFBQSxDQUFDLEdBQUcsQ0FBQSxBQUFDLE1BQU0sQ0FBQTtBQUNYLEFBQUE7QUFDQSxBQUFBLENBQU8sTUFBTixNQUFNLENBQUMsQ0FBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQ25CLEFBQUEsQ0FBQyxPQUFPLENBQUEsQUFBQyxNQUFNLENBQUMsQ0FBQyxDQUFHLENBQUMsQUFDbkIsRUFBRSxBQUFDLEVBQUUsQUFDTCxJQUFJLEFBQUMsRUFBRSxBQUNQLEVBQUUsQ0FBQyxBQUFDLEVBQUUsQ0FBQyxBQUFDLEVBQUUsQUFBQyxDQUFDLEFBQUMsRUFBRSxBQUFDLElBQUksQUFBQyxFQUFFLEFBQ3ZCLEVBQUUsQ0FBQyxBQUFDLEVBQUUsQ0FBQyxBQUFDLEVBQUUsQUFBQyxDQUFDLEFBQUMsRUFBRSxHQUFHLEFBQUMsS0FBSyxBQUN4QixFQUFFLENBQUMsQUFBQyxFQUFFLENBQUMsQUFBQyxFQUFFLEFBQUMsQ0FBQyxBQUFDLEVBQUUsQUFBQyxJQUFJLEFBQ3BCLENBQUMsQ0FBRyxDO0FBQUEsQ0FBQTtBQUNOLENBQUMsQ0FBQyxDQUFDLEtBQUk7QUFDUCIsIm5hbWVzIjpbXSwic291cmNlc0NvbnRlbnQiOlsiIyBsb2dnZXIudGVzdC5jaXZldFxuXG5pbXBvcnQge1xuXHREQkcsIExPRywgV0FSTiwgRVJSLCBnZXRMb2csIHNldExvZ0xldmVsLCBjbGVhckxvZyxcblx0SU5ERU5ULCBVTkRFTlQsXG5cdH0gZnJvbSAnQGpkZWlnaGFuL3V0aWxzJ1xuaW1wb3J0IHtcblx0ZXF1YWwsIHRydXRoeSwgZmFsc3ksIHN1Y2NlZWRzLCBmYWlscywgbWF0Y2hlcyxcblx0fSBmcm9tICdAamRlaWdoYW4vdXRpbHMvdW5pdC10ZXN0J1xuXG4jIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5sb2dBbGwgOj0gKCkgPT5cblx0Y2xlYXJMb2coKVxuXHREQkcgXCJkZWJ1Z1wiXG5cdExPRyBcImluZm9cIlxuXHRXQVJOIFwid2FybmluZ1wiXG5cdEVSUiBcImVycm9yXCJcblx0cmV0dXJuIGdldExvZygpXG5cbiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbigoKSA9PlxuXHRjdXJMb2cgOj0gbG9nQWxsKClcblx0ZXF1YWwgY3VyTG9nLCBcIlwiXCJcblx0XHRJIGluZm9cblx0XHRXIHdhcm5pbmdcblx0XHRFUlJPUjogZXJyb3Jcblx0XHRcIlwiXCJcblx0KSgpXG5cbigoKSA9PlxuXHRzZXRMb2dMZXZlbCAnZGVidWcnXG5cdGN1ckxvZyA6PSBsb2dBbGwoKVxuXHR0cnV0aHkgY3VyTG9nLnN0YXJ0c1dpdGgoXCJcIlwiXG5cdFx0RCBkZWJ1Z1xuXHRcdEkgaW5mb1xuXHRcdFcgd2FybmluZ1xuXHRcdEVSUk9SOiBlcnJvclxuXHRcdFwiXCJcIilcblx0KSgpXG5cbigoKSA9PlxuXHRzZXRMb2dMZXZlbCAnZXJyb3InXG5cdGN1ckxvZyA6PSBsb2dBbGwoKVxuXHR0cnV0aHkgY3VyTG9nLnN0YXJ0c1dpdGgoXCJcIlwiXG5cdFx0RVJST1I6IGVycm9yXG5cdFx0XCJcIlwiKVxuXHQpKClcblxuKCgpID0+XG5cdGNsZWFyTG9nKClcblx0c2V0TG9nTGV2ZWwgJ2luZm8nXG5cdExPRyBcImluZm9cIiwgSU5ERU5ULCBcInN0dWZmXCIsIFVOREVOVFxuXHRMT0cgXCJkb25lXCJcblx0Y3VyTG9nIDo9IGdldExvZygpXG5cdGVxdWFsIGN1ckxvZywgXCJcIlwiXG5cdFx0SSBpbmZvXG5cdFx0SSAgICBzdHVmZlxuXHRcdEkgZG9uZVxuXHRcdFwiXCJcIlxuXHQpKClcblxuKCgpID0+XG5cdGNsZWFyTG9nKClcblx0c2V0TG9nTGV2ZWwgJ2luZm8nXG5cdExPRyBcImluZm9cIiwgSU5ERU5ULCBcInN0dWZmXCIsIFVOREVOVFxuXHRMT0cgXCJmaW5pc2hlZFwiXG5cdGN1ckxvZyA6PSBnZXRMb2coKVxuXHRlcXVhbCBjdXJMb2csIFwiXCJcIlxuXHRcdEkgaW5mb1xuXHRcdEkgICAgc3R1ZmZcblx0XHRJIGZpbmlzaGVkXG5cdFx0XCJcIlwiXG5cdCkoKVxuXG4oKCkgPT5cblx0Y2xlYXJMb2coKVxuXHRzZXRMb2dMZXZlbCAncHJvZmlsZSdcblx0TE9HIFwiaW5mb1wiLCBJTkRFTlQsIFwic3R1ZmZcIiwgVU5ERU5UXG5cdExPRyBcImRvbmVcIlxuXG5cdGN1ckxvZyA6PSBnZXRMb2coKVxuXHRtYXRjaGVzIGN1ckxvZywgLy8vXlxuXHRcdG1zIFxcblxuXHRcdC17NX0gXFxuXG5cdFx0XFxzKiBcXGQrIFxccyBJIFxccyBpbmZvIFxcblxuXHRcdFxccyogXFxkKyBcXHMgSSBcXHN7NH0gc3R1ZmZcblx0XHRcXHMqIFxcZCsgXFxzIEkgXFxzIGRvbmVcblx0XHQkLy8vXG5cdCkgIyAoKVxuIl19