# v8-module.coffee

import {getMyCaller} from '@jdeighan/utils/v8-stack'
import type {stackFrame} from '@jdeighan/utils/v8-stack'

# ---------------------------------------------------------------------------

type bothFrames = stackFrame?[]

isBothFrames := (x: any): x is bothFrames =>
	return Array.isArray(x) && (x.length == 2)

# ---------------------------------------------------------------------------

export getBoth := (): bothFrames ->

	result := secondFunc('both')
	if Array.isArray(result)
		return result
	else
		throw new Error("Expected array, got stackFrame")

# ---------------------------------------------------------------------------

export getDirect := (): stackFrame? ->

	result := secondFunc('direct')
	if Array.isArray(result)
		throw new Error("Got unexpected array")
	return result

# ---------------------------------------------------------------------------

export getOutside := (): stackFrame? ->

	result := secondFunc('outside')
	if Array.isArray(result)
		throw new Error("Got unexpected array")
	return result

# ---------------------------------------------------------------------------

secondFunc := (type: string): bothFrames | stackFrame? ->

	return thirdFunc(type)

# ---------------------------------------------------------------------------

thirdFunc := (type: string): bothFrames | stackFrame? ->

	# --- direct caller should be 'secondFunc'
	#     outside caller should be the function
	#        that called getCaller()
	switch type
		when 'both'
			return [getMyCaller(), getMyCaller()]
		when 'direct'
			return getMyCaller()
		when 'outside'
			return getMyCaller()
		else
			throw new Error "Unknown type: #{type}"
